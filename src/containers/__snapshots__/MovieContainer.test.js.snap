// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieContainer should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieContainer
    favorites={
      Array [
        Object {
          "movie_id": 1,
          "title": "movie1",
        },
        Object {
          "movie_id": 2,
          "title": "movie2",
        },
      ]
    }
    match={
      Object {
        "path": "/",
      }
    }
    movies={
      Array [
        Object {
          "movie_id": 1,
          "title": "movie1",
        },
        Object {
          "movie_id": 2,
          "title": "movie2",
        },
        Object {
          "movie_id": 3,
          "title": "movie3",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="movie-container"
        >
          <Connect(SearchBar) />
          <Connect(Card)
            movie={
              Object {
                "movie_id": 1,
                "title": "movie1",
              }
            }
          />
          <Connect(Card)
            movie={
              Object {
                "movie_id": 2,
                "title": "movie2",
              }
            }
          />
          <Connect(Card)
            movie={
              Object {
                "movie_id": 3,
                "title": "movie3",
              }
            }
          />
        </div>,
        <h1
          className="hidden"
        >
          You have no favorited movies silly!
        </h1>,
        <h1
          className="hidden"
        >
          No movies matched your search query.
        </h1>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(SearchBar) />,
            Array [
              <Connect(Card)
                movie={
                  Object {
                    "movie_id": 1,
                    "title": "movie1",
                  }
                }
              />,
              <Connect(Card)
                movie={
                  Object {
                    "movie_id": 2,
                    "title": "movie2",
                  }
                }
              />,
              <Connect(Card)
                movie={
                  Object {
                    "movie_id": 3,
                    "title": "movie3",
                  }
                }
              />,
            ],
          ],
          "className": "movie-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "movie": Object {
                "movie_id": 1,
                "title": "movie1",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "movie": Object {
                "movie_id": 2,
                "title": "movie2",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "class",
            "props": Object {
              "movie": Object {
                "movie_id": 3,
                "title": "movie3",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "You have no favorited movies silly!",
          "className": "hidden",
        },
        "ref": null,
        "rendered": "You have no favorited movies silly!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "No movies matched your search query.",
          "className": "hidden",
        },
        "ref": null,
        "rendered": "No movies matched your search query.",
        "type": "h1",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="movie-container"
          >
            <Connect(SearchBar) />
            <Connect(Card)
              movie={
                Object {
                  "movie_id": 1,
                  "title": "movie1",
                }
              }
            />
            <Connect(Card)
              movie={
                Object {
                  "movie_id": 2,
                  "title": "movie2",
                }
              }
            />
            <Connect(Card)
              movie={
                Object {
                  "movie_id": 3,
                  "title": "movie3",
                }
              }
            />
          </div>,
          <h1
            className="hidden"
          >
            You have no favorited movies silly!
          </h1>,
          <h1
            className="hidden"
          >
            No movies matched your search query.
          </h1>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(SearchBar) />,
              Array [
                <Connect(Card)
                  movie={
                    Object {
                      "movie_id": 1,
                      "title": "movie1",
                    }
                  }
                />,
                <Connect(Card)
                  movie={
                    Object {
                      "movie_id": 2,
                      "title": "movie2",
                    }
                  }
                />,
                <Connect(Card)
                  movie={
                    Object {
                      "movie_id": 3,
                      "title": "movie3",
                    }
                  }
                />,
              ],
            ],
            "className": "movie-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "movie": Object {
                  "movie_id": 1,
                  "title": "movie1",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "movie": Object {
                  "movie_id": 2,
                  "title": "movie2",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "3",
              "nodeType": "class",
              "props": Object {
                "movie": Object {
                  "movie_id": 3,
                  "title": "movie3",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You have no favorited movies silly!",
            "className": "hidden",
          },
          "ref": null,
          "rendered": "You have no favorited movies silly!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No movies matched your search query.",
            "className": "hidden",
          },
          "ref": null,
          "rendered": "No movies matched your search query.",
          "type": "h1",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
